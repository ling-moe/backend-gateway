# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  dependency:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Publish dependency
      uses: samuelmeuli/action-maven-publish@v1.4.0
      with:
        # Username (not email!) for your Nexus repository manager account
        nexus_username: ${{ secrets.MAVEN_REPOSITORY_USERNAME }}
        # Password for your Nexus account
        nexus_password: ${{ secrets.MAVEN_REPOSITORY_PASSWORD }}
        # Nexus server ID as specified in your project's `nexus-staging-maven-plugin` and `distributionManagement` configurations
        server_id: rdc-snapshots
        # Additional arguments to pass to the Maven command
        maven_args: -DaltDeploymentRepository=rdc-snapshots::default::https://repo.rdc.aliyun.com/repository/132936-snapshot-gfKqCh/ -Dmaven.test.skip=true
        maven_goals_phases: clean deploy package docker:build
    - name: Push Docker Image
      uses: julioarruda/pushimagetoregistry@v1
      with:
        acr-tokenname: ${{ secrets.DOCKER_REPOSITORY_USERNAME }}
        acr-token: ${{ secrets.DOCKER_REPOSITORY_PASSWORD }}
        acr-account: ccr.ccs.tencentyun.com
        acr-imagename: ccr.ccs.tencentyun.com/0moe/backend-gateway:latest
